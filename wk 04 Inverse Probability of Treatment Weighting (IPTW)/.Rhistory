#load packages
library(tableone)
library(ipw)
#load packages
library(tableone)
library(ipw)
install packages (if needed)
install.packages("tableone")
install.packages("ipw")
library(tableone)
library(ipw)
library(sandwich)
library(survey)
library(ipw)
expit <- function(x) {1/(1+exp(-x)) }
logit <- function(p) {log(p)-log(1-p)}
load(url("http://biostat.mc.vanderbilt.edu/wiki/pub/Main/DataSets/rhc.sav"))
load(url("https://biostat.app.vumc.org/wiki/pub/Main/DataSets/rhc.sav"))
#view data
View(rhc)
#create a data set with just these variables, for simplicity
ARF<-as.numeric(rhc$cat1=='ARF')
CHF<-as.numeric(rhc$cat1=='CHF')
Cirr<-as.numeric(rhc$cat1=='Cirrhosis')
colcan<-as.numeric(rhc$cat1=='Colon Cancer')
Coma<-as.numeric(rhc$cat1=='Coma')
COPD<-as.numeric(rhc$cat1=='COPD')
lungcan<-as.numeric(rhc$cat1=='Lung Cancer')
MOSF<-as.numeric(rhc$cat1=='MOSF w/Malignancy')
sepsis<-as.numeric(rhc$cat1=='MOSF w/Sepsis')
female<-as.numeric(rhc$sex=='Female')
died<-as.integer(rhc$death=='Yes')
age<-rhc$age
treatment<-as.numeric(rhc$swang1=='RHC')
meanbp1<-rhc$meanbp1
aps<-aps1
#create a data set with just these variables, for simplicity
ARF<-as.numeric(rhc$cat1=='ARF')
CHF<-as.numeric(rhc$cat1=='CHF')
Cirr<-as.numeric(rhc$cat1=='Cirrhosis')
colcan<-as.numeric(rhc$cat1=='Colon Cancer')
Coma<-as.numeric(rhc$cat1=='Coma')
COPD<-as.numeric(rhc$cat1=='COPD')
lungcan<-as.numeric(rhc$cat1=='Lung Cancer')
MOSF<-as.numeric(rhc$cat1=='MOSF w/Malignancy')
sepsis<-as.numeric(rhc$cat1=='MOSF w/Sepsis')
female<-as.numeric(rhc$sex=='Female')
died<-as.integer(rhc$death=='Yes')
age<-rhc$age
treatment<-as.numeric(rhc$swang1=='RHC')
meanbp1<-rhc$meanbp1
aps<-rhc$aps1
#new dataset
mydata<-cbind(ARF,CHF,Cirr,colcan,Coma,lungcan,MOSF,sepsis,
age,female,meanbp1,aps,treatment,died)
mydata<-data.frame(mydata)
#covariates we will use (shorter list than you would use in practice)
xvars<-c("age","female","meanbp1","ARF","CHF","Cirr","colcan",
"Coma","lungcan","MOSF","sepsis")
#look at a table 1
table1<- CreateTableOne(vars=xvars,strata="treatment", data=mydata, test=FALSE)
## include standardized mean difference (SMD)
print(table1,smd=TRUE)
#covariates we will use (shorter list than you would use in practice)
xvars<-c("age","female","meanbp1","aps"  ,"ARF","CHF","Cirr","colcan",
"Coma","lungcan","MOSF","sepsis")
#look at a table 1
table1<- CreateTableOne(vars=xvars,strata="treatment", data=mydata, test=FALSE)
## include standardized mean difference (SMD)
print(table1,smd=TRUE)
#propensity score model
psmodel <- glm(treatment ~ age + female + meanbp1+ARF+CHF+Cirr+colcan+
Coma+lungcan+MOSF+sepsis,
family  = binomial(link ="logit"))
## value of propensity score for each subject
ps <-predict(psmodel, type = "response")
ps
#create weights
weight<-ifelse(treatment==1,1/(ps),1/(1-ps))
psmodel
psmodel$model
psmodel$coefficients
psmodel
psmodel$residuals
psmodel$fitted.values
psmodel$effects
psmodel$R
psmodel$coefficients
psmodel$boundary
psmodel$terms
psmodel$model
psmodel$contrasts
## value of propensity score for each subject
ps <-predict(psmodel, type = "response")
l
weighteddata<-svydesign(ids = ~ 1, data =mydata, weights = ~ weight)
#weighted table 1
weightedtable <-svyCreateTableOne(vars = xvars, strata = "treatment",
data = weighteddata, test = FALSE)
## Show table with SMD
print(weightedtable, smd = TRUE)
#to get a weighted mean for a single covariate directly:
mean(weight[treatment==1]*age[treatment==1])/(mean(weight[treatment==1]))
#to get a weighted mean for a single covariate directly:
mean(weight[treatment==1]*age[treatment==1])/(mean(weight[treatment==1]))
#get causal risk difference
glm.obj<-glm(died~treatment,weights=weight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
#get causal relative risk. Weighted GLM
glm.obj<-glm(died~treatment,weights=weight,family=quasibinomial(link=log))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
#to properly account for weighting, use asymptotic (sandwich) variance
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
#get point estimate and CI for relative risk (need to exponentiate)
causalrr<-exp(betaiptw[2])
lcl<-exp(betaiptw[2]-1.96*SE[2])
ucl<-exp(betaiptw[2]+1.96*SE[2])
c(lcl,causalrr,ucl)
truncweight<-replace(weight,weight>10,10)
glm.obj<-glm(died~treatment,weights=truncweight,family=quasibinomial(link="identity"))
betaiptw<-coef(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
#first fit propensity score model to get weights
weightmodel<-ipwpoint(exposure= treatment, family = "binomial", link ="logit",
denominator= ~ age + female + meanbp1+ARF+CHF+Cirr+colcan+
Coma+lungcan+MOSF+sepsis, data=mydata)
#fit a marginal structural model (risk difference)
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~wt,
data =mydata)))
#get causal risk difference
glm.obj<-glm(died~treatment,weights=weight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
summary(glm.obj)
#get causal relative risk. Weighted GLM
glm.obj<-glm(died~treatment,weights=weight,family=quasibinomial(link=log))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
#to properly account for weighting, use asymptotic (sandwich) variance
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
#get point estimate and CI for relative risk (need to exponentiate)
causalrr<-exp(betaiptw[2])
lcl<-exp(betaiptw[2]-1.96*SE[2])
ucl<-exp(betaiptw[2]+1.96*SE[2])
c(lcl,causalrr,ucl)
install.packages("ipw")
install.packages("geepack")
library("geepack")
weights
weight
max(weight)
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~wt,
data =mydata)))
##########################################
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~weight,
data =mydata)))
coef(msm)
confint(msm)
# fit propensity score model to get weights, but truncated
weightmodel<-ipwpoint(exposure= treatment, family = "binomial", link ="logit",
denominator= ~ age + female + meanbp1+ARF+CHF+Cirr+colcan+
Coma+lungcan+MOSF+sepsis, data=mydata,trunc=.01)
glm.obj<-glm(died~treatment,weights=weight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
truncweight<-replace(weight,weight>10,10)
#get causal risk difference
glm.obj<-glm(died~treatment,weights=truncweight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
truncweight<-replace(weight,weight>10,10)
#get causal risk difference
glm.obj<-glm(died~treatment,weights=truncweight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
summary(glm.obj)
hello
1
1
1
1
1
1
1
summary(glm.obj)
glm.obj$weights
max(glm.obj$weights)
max(glm.obj$prior.weights
max(glm.obj$prior.weights)
min(glm.obj$prior.weights)
truncweight<-replace(weight,weight>10,10)
#get causal risk difference
glm.obj<-glm(died~treatment,weights=truncweight,family=quasibinomial(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
glm.obj$weights
glm.obj$prior.weights
glm.obj$prior.weights
max(glm.obj$prior.weights)
max(glm.obj$weights)
max(weight)
min(weight)
devtools::install_github(repo = "ipw", ref = "develop")
library(ipw)
#covariates we will use
xvars<-c("age","educ","black","hispan","married","nodegr","re74","re75")
mydata
library(survey)
View(lalonde)
data(lalonde, package = 'MatchIt')
age<-lalonde$age
educ<-lalonde$educ
black<-as.numeric(lalonde$race=='black')
hispan<-as.numeric(lalonde$race=='hispan')
married<-lalonde$married
nodegr<-lalonde$nodegr
re74<-lalonde$re74
re75<-lalonde$re75
re78<-lalonde$re78
treat<-lalonde$treat
View(lalonde)
View(mydata)
mydata=cbind(age,educ,black,hispan,married,nodegr,re74,re75,treat,re78)
mydata<-data.frame(mydata)
View(mydata)
#look at a table 1
table1<- CreateTableOne(vars=xvars,strata="treat", data=mydata, test=FALSE)
## include standardized mean difference (SMD)
print(table1,smd=TRUE)
#propensity score model
psmodel <- glm(treat ~ age+educ+black+hispan+married+nodegr+re74+re75,
family  = binomial(link ="logit"))
ps <-predict(psmodel, type = "response")
weight<-ifelse(treatment==1,1/(ps),1/(1-ps))
weight
min(weight)
max(weight)
treat
#create weights
weight<-ifelse(treat==1,1/(ps),1/(1-ps))
min(weight)
max(weight)
#look at a table 1
table1<- CreateTableOne(vars=xvars,strata="treat", data=mydata, test=FALSE)
## include standardized mean difference (SMD)
print(table1,smd=TRUE)
weighteddata<-svydesign(ids = ~ 1, data =mydata, weights = ~ weight)
#weighted table 1
weightedtable <-svyCreateTableOne(vars = xvars, strata = "treat",
data = weighteddata, test = FALSE)
## Show table with SMD
print(weightedtable, smd = TRUE)
#fit a marginal structural model (risk difference)
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~wt,
data =mydata)))
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~weightt,
data =mydata)))
#fit a marginal structural model (risk difference)
msm <- (svyglm(died ~ treatment, design = svydesign(~ 1, weights = ~weight,
data =mydata)))
data =mydata)))
#fit a marginal structural model (risk difference)
msm <- (svyglm(died ~ treat, design = svydesign(~ 1, weights = ~wt,
data =mydata)))
#fit a marginal structural model (risk difference)
msm <- (svyglm(died ~ treat, design = svydesign(~ 1, weights = ~weight,
data =mydata)))
#fit a marginal structural model (risk difference)
msm <- (svyglm(re78~ treat, design = svydesign(~ 1, weights = ~weight,
data =mydata)))
coef(msm)
confint(msm)
#to get a weighted mean for a single covariate directly:
mean(weight[treatment==1]*age[treatment==1])/(mean(weight[treatment==1]))
#to get a weighted mean for a single covariate directly:
mean(weight[treatment==1]*nodegr[treatment==1])/(mean(weight[treatment==1]))
#weighted table 1
weightedtable <-svyCreateTableOne(vars = xvars, strata = "treat",
data = weighteddata, test = FALSE)
## Show table with SMD
print(weightedtable, smd = TRUE)
#to get a weighted mean for a single covariate directly:
mean(weight[treat==1]*nodegr[treat==1])/(mean(weight[treat==1]))
mean(weight[treat==10]*nodegr[treat==0])/(mean(weight[treat==0]))
mean(weight[treat==0]*nodegr[treat==0])/(mean(weight[treat==0]))
msm <- (svyglm(re78~ treat, design = svydesign(~ 1, weights = ~weight,
data =mydata)))
coef(msm)
confint(msm)
glm.obj<-glm(re78~ treat,weights=weight,family=quasibinomial(link="identity"))
glm.obj<-glm(re78~ treat,weights=weight,family=quasibinomial(link="identity"))
glm.obj<-glm(re78 ~ treat, weights=weight,family=quasibinomial(link="identity"))
y
## Show table with SMD
print(weightedtable, smd = TRUE)
weightedtable <-svyCreateTableOne(vars = xvars, strata = "treat",
data = weighteddata, test = FALSE)
glm.obj<-glm(re78 ~ treat,weights=weight,family=quasibinomial(link=log))
#import data
data(lalonde, package = 'MatchIt')
#create variables
age<-lalonde$age
educ<-lalonde$educ
black<-as.numeric(lalonde$race=='black')
hispan<-as.numeric(lalonde$race=='hispan')
married<-lalonde$married
nodegr<-lalonde$nodegr
re74<-lalonde$re74
re75<-lalonde$re75
re78<-lalonde$re78
treat<-lalonde$treat
#create new dataset
mydata=cbind(age,educ,black,hispan,married,nodegr,re74,re75,treat,re78)
mydata<-data.frame(mydata)
#covariates we will use
xvars<-c("age","educ","black","hispan","married","nodegr","re74","re75")
#look at a table 1
table1<- CreateTableOne(vars=xvars,strata="treat", data=mydata, test=FALSE)
## include standardized mean difference (SMD)
print(table1,smd=TRUE)
psmodel <- glm(treat ~ age+educ+black+hispan+married+nodegr+re74+re75,
family  = binomial(link ="logit"))
## value of propensity score for each subject
ps <-predict(psmodel, type = "response")
#create weights
weight<-ifelse(treat==1,1/(ps),1/(1-ps))
#apply weights to data
weighteddata<-svydesign(ids = ~ 1, data =mydata, weights = ~ weight)
#weighted table 1
weightedtable <-svyCreateTableOne(vars = xvars, strata = "treat",
data = weighteddata, test = FALSE)
## Show table with SMD
print(weightedtable, smd = TRUE)
glm.obj<-glm(re78 ~ treat, weights=weight,family=quasibinomial(link="identity"))
glm.obj<-glm(re78 ~ treat, weights=weight,family=quasi(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
msm <- (svyglm(re78~ treat, design = svydesign(~ 1, weights = ~weight, data =mydata)))
coef(msm)
confint(msm)
msm <- (svyglm(re78~ treat, design = svydesign(~ 1, weights = ~weight, data =mydata, trunc=0.01)))
coef(msm)
confint(msm)
msm <- (svyglm(re78~ treat, design = svydesign(~ 1, weights = ~weight, data =mydata, trunc=0.01)))
coef(msm)
confint(msm)
weight
quantile(weight, probs = c(.01, .5, .99))
max(weight)
min(weight)
quantile(weight, probs = c(.01))
quantile(weight, probs = c(.01, .5, .99))
th_max = quantile(weight, probs = c(.99))
th_min = quantile(weight, probs = c(.01))
truncweight<-replace(weight,weight>th_max,th_max)
truncweight<-replace(weight,weight<th_min,th_min)
glm.obj<-glm(died~treatment,weights=truncweight,family=quasi(link="identity"))
#get causal risk difference
glm.obj<-glm(re78 ~ treat,weights=truncweight,family=quasi(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
quantile(weight, probs = c(.01, .5, .99))
th_max = quantile(weight, probs = c(.99))
th_min = quantile(weight, probs = c(.01))
truncweight<-replace(weight,weight>=th_max,th_max)
truncweight<-replace(weight,weight=<th_min,th_min)
th_max = quantile(weight, probs = c(.99))
th_min = quantile(weight, probs = c(.01))
truncweight<-replace(weight,weight>=th_max,th_max)
truncweight<-replace(weight,weight=<th_min,th_min)
#get causal risk difference
glm.obj<-glm(re78 ~ treat,weights=truncweight,family=quasi(link="identity"))
#summary(glm.obj)
betaiptw<-coef(glm.obj)
SE<-sqrt(diag(vcovHC(glm.obj, type="HC0")))
causalrd<-(betaiptw[2])
lcl<-(betaiptw[2]-1.96*SE[2])
ucl<-(betaiptw[2]+1.96*SE[2])
c(lcl,causalrd,ucl)
